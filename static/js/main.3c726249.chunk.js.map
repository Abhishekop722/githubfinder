{"version":3,"sources":["components/layout/spinner-icon-gif-10.jpg","components/layout/Navbar.js","components/users/UserItem.js","components/layout/spinner.js","context/github/githubContext.js","components/users/Users.js","components/repos/RepoItem.js","components/repos/Repos.js","components/users/User.js","context/github/githubReducer.js","context/types.js","components/users/Search.js","components/layout/Alert.js","components/pages/About.js","components/pages/notFound.js","context/github/GithubState.js","App.js","index.js"],"names":["module","exports","Navbar","icon","title","className","to","defaultProps","UserItem","user","avatar_url","login","html_url","src","alt","style","width","Spinner","spinner","margin","display","gitHubContext","createContext","userStyle","gridTemplateColumns","gridGap","Users","users","loading","githubContext","useContext","GithubContext","console","log","map","key","id","RepoItem","repo","href","name","Repos","repos","User","getUser","getUserRepos","match","useEffect","params","location","bio","blog","followers","following","public_repos","public_gist","hireable","company","state","action","type","payload","laoding","Search","clearUsers","showClear","setAlert","searchUsers","useState","text","setText","onSubmit","e","preventDefault","target","value","placeholder","onChange","onClick","Alert","alert","msg","About","notFound","GithubState","props","initialState","useReducer","GithubReducer","dispatch","a","setLoading","axios","get","process","REACT_APP_GITHUB_CLIENT_ID","REACT_APP_GITHUB_CLIENT_SECRET","res","data","items","Provider","children","App","githubClientId","githubClientSecret","GITHUB_CLIENT_ID","GITHUB_CLIENT_SECRET","setUsers","setUser","setRepos","showAlert","setTimeout","username","exact","path","render","length","component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.3c726249.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner-icon-gif-10.bbf63906.jpg\";","import React  from 'react';\nimport PropTypes from 'prop-types'\nimport {Link} from 'react-router-dom' \n\nconst Navbar = ({icon, title}) => {\n    return (\n      <nav className='navbar bg-primary'>\n        <h1>\n              <i className={icon}/> {title}\n\n        </h1>\n        <ul>\n          <li>\n            <Link to='/'>Home</Link>\n          </li>\n          <li>\n            <Link to='/about'>About</Link>\n          </li>\n          </ul>          \n        </nav>\n    );\n  }\n  \nNavbar.defaultProps = {\n  title:'Github Finder',\n  icon: 'fa fa-github'\n} ;\n\nNavbar.propTypes = {  \n  title: PropTypes.string.isRequired\n}\n\n\nexport default Navbar;\n","import React from 'react';\nimport PropTypes from 'prop-types'\nimport {Link} from 'react-router-dom'\n\n\nconst UserItem = ({user:{avatar_url, login, html_url}}) => {\n\n\n\n\n\n\n    return (\n        <div className='card text-center'>\n            <img\n                src={avatar_url}\n                alt=''\n                className='round-img'\n                style={{ width: '60px' }}\n            />\n            <h3>{login}</h3>\n            <div>\n                <Link to={`/user/${login}`} className='btn btn-dark btn-sm my-1'>\n                    More\n                    </Link>\n            </div>\n        </div>\n    );\n}\nUserItem.propTypes = {\n        user: PropTypes.object.isRequired\n}\n\n\nexport default UserItem;\n","import React, {Fragment} from 'react'\nimport spinner from './spinner-icon-gif-10.jpg'\n\nconst Spinner = ()=>{\n    return(\n<Fragment>\n        <img src={spinner} alt='loading...' style={{width: '200px' , margin : 'auto', display: 'block'}}></img>\n    </Fragment>\n    )\n}\nexport default Spinner","import {createContext } from'react';\n\nconst gitHubContext = createContext();\n\nexport default gitHubContext;","import React, {useContext, useEffect} from 'react';\nimport UserItem from './UserItem';\nimport Spinner from '../layout/spinner'\nimport propTypes from 'prop-types'\nimport GithubContext from '../../context/github/githubContext'\n\n\nconst Users =({users ,loading})=>{\n    const githubContext = useContext(GithubContext) \n    console.log(\"aaaaaaaaaaaaaa\", githubContext)\n    // const {loading, users} = githubContext\n        if(loading){\n            return <Spinner/>\n        }else {\n\n            console.log(\"12121\",users)\n    \n        return (\n            <div style={userStyle}>\n                {users.map(user => \n                    <UserItem key={user.id} user={user}/>\n                )}\n            </div>\n        );\n    }\n}\n\nconst userStyle = {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(3,1fr)',\n    gridGap: '1rem'\n}\nUsers.propTypes = {\n    users: propTypes.array.isRequired,\n    loading: propTypes.bool.isRequired\n}\n\nexport default Users;\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst RepoItem = ({repo}) =>{\n    console.log(repo)\n    return (\n        <div className='card'>\n            <h3>\n            <a href={repo.html_url}>{repo.name}</a>\n            </h3>\n        </div>       \n    )\n}\nRepoItem.propTypes = {\n    repo: PropTypes.object.isRequired\n}\n\nexport default RepoItem;\n","import React from 'react'\nimport RepoItem from './RepoItem'\n\nconst Repos = ({repos}) =>{\n    return (\n        repos.map(repo =>\n            <RepoItem  repo={repo} key={repo.id}/>\n            )\n    )\n}\n\nexport default Repos;\n","import React, { Fragment,  useEffect } from 'react'\nimport Spinner from '../layout/spinner'\nimport Repos from '../repos/Repos'\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types'\n\n const User = ({user, loading, getUser, getUserRepos, repos, match})=> {\n\n\n    // componentDidMount() {\n    //     console.log(this.props.match.params)\n    //     this.props.getUser(this.props.match.params.login)\n    //     this.props.getUserRepos(this.props.match.params.login)\n    // }\n     useEffect(()=>{\n         getUser(match.params.login);\n         getUserRepos(match.params.login)\n        //  eslint-disable-next-line\n     },[])\n\n     \n        const { name, avatar_url, location, bio, blog, login, html_url, followers, following, public_repos, public_gist, hireable, company } = user\n        if (loading) { return <Spinner /> }\n        return (\n            <Fragment>\n                <Link to='/' className='btn btn-light'>\n                    Back To Search\n\n                </Link>\n                Hireable: {' '}\n                {hireable ? \n                <i className='fas fa-check text-success' /> : \n                <i className='fas fa-times-circle text-danger' />}\n                <div className='card grid-2'>\n                    <div className='all-center'>\n                        <img\n                        src={avatar_url}\n                        className='round-img'\n                        alt=''\n                        style={{width: '150px'}}\n                        />\n                        <h1>{name}</h1>\n                        <p>Location: {location}</p>\n                    </div>\n                    <div>\n                        {bio && (\n                            <Fragment>\n                                <h3>Bio</h3>\n                                <p>{bio}</p>\n                            </Fragment>\n                        )}\n                        <a href={html_url} className='btn btn-dark m-1'>Visit Github Profile</a>\n                        <ul>\n                            <li>\n                                {login && <Fragment>\n                                    <strong>Username: </strong>{login}\n                                    </Fragment>\n                                }</li>\n                                <li>\n                                {company && <Fragment>\n                                    <strong>Company: </strong>{company}\n                                    </Fragment>\n                                }</li>\n                                <li>\n                                {blog && <Fragment>\n                                    <strong>Website: </strong>{blog}\n                                    </Fragment>\n                                }</li>\n                                </ul>\n                                \n                    </div>  \n                </div>\n                <div className=\"card text-center\">\n                    <div className=\"badge badge-primary\">Followers: {followers}</div>\n\n                    <div className=\"badge badge-success\">Following: {following}</div>\n\n                    <div className=\"badge badge-light\">Public Repos: {public_repos}</div>\n\n                    <div className=\"badge badge-primary\">Public Gists: {public_gist}</div>\n\n                </div>\n                <Repos repos={repos}/>\n            </Fragment>\n        )\n    }\nUser.propTypes = {\n    loading: PropTypes.bool,\n    user: PropTypes.isRequired,\n    repos: PropTypes.array.isRequired,\n    getUser: PropTypes.func.isRequired,\n    getUserRepos:PropTypes.func.isRequired\n}\nexport default User","import {\n    SEARCH_USERS,\n    SET_LOADING,\n    INITIAL_USERS,\n    CLEAR_USERS,\n    GET_USER,\n    GET_REPOS\n} from '../types'\n\nexport default (state, action)=>{\n    console.log(\"zzzzzzzzzzzz\",action, state)\n    switch(action.type){\n        case INITIAL_USERS:\n            return {\n                ...state,\n                users: action.payload,\n                loading: false\n            }\n        case SEARCH_USERS:\n            return {\n                ...state,\n                users: action.payload,\n                loading: false\n            }\n        case SET_LOADING:\n            return {\n                ...state,\n                laoding: true\n            }\n            default:\n                return state;\n    }\n}","export const INITIAL_USERS = 'INITIAL_USERS'\nexport const SEARCH_USERS = 'SEACRH_USERS'\nexport const GET_USER = 'GET_USER'\nexport const CLEAR_USERS = 'CLEAR_USERS'\nexport const GET_REPOS = 'GET_REPOS'\nexport const SET_LOADING = 'SET_LOADING'\nexport const SET_ALERT = 'SET_ALERT'\nexport const REMOVE_ALERT = 'REMOVE_ALERT'\n","import React, {  useState , useContext} from 'react'\nimport PropTypes from 'prop-types'\nimport GithubContext from '../../context/github/githubContext'\nimport githubReducer from '../../context/github/githubReducer'\n\n\nconst Search = ({ clearUsers, showClear, setAlert, searchUsers})=> {\n    // const gitHubContext = useContext(GithubContext)\n    const [text, setText] = useState(' ');\n    const onChange = (e) => {\n        console.log(e.target.value)\n        setText(e.target.value )\n    }\n   const onSubmit = (e)=>{\n        e.preventDefault()\n        console.log(\"asdcdwfcwea\",e.target.value, text)\n        if(text === ' '){\n            setAlert('Please type something', 'light')\n        } else{\n\n            searchUsers(text)\n            setText(' ')\n        }\n        console.log(text) \n           \n    }\n        return (\n            <div>\n                <form onSubmit={onSubmit}>\n                    <input\n                        type='text'\n                        name='text'\n                        placeholder='Search Users...'\n                        value={text}\n                        onChange={onChange}\n                    />\n                    <input\n                        type='submit'\n                        value='search'\n                        className='btn btn-dark btn-block' />\n                </form>\n                {showClear && <button \n                className='btn btn-light btn-block' \n                onClick={clearUsers}>Clear</button>}\n                \n            </div>\n        )\n}\nSearch.propTypes = {\n    clearUsers: PropTypes.func.isRequired,\n    showClear: PropTypes.bool.isRequired,\n    setAlert: PropTypes.func.isRequired\n};\nexport default Search","import React  from 'react'\n\nconst Alert = ({ alert }) => {\n    return (\n        alert !== null && \n        \n            <div className={`alert alert-${alert.type}`}>\n                <i className='fas fa-info-circle' /> {alert.msg}\n            </div>\n    )\n}\nexport default Alert;","import React from 'react'\n\nconst About = ()=>{\n    return(\n        <>\n            <h1>About this app</h1>\n            <p>App to search github users</p>\n            <p>Version: 1.0.0</p>\n        </>\n    )\n}\nexport default About","import React , {Fragment} from 'react'\n\nconst notFound = ()=>{\n    return(\n        <div>\n            <h1>Not Found</h1>\n            <p className='lead'>The page you are looking for does not exist....</p>\n        </div>\n    )\n}\nexport default notFound","import React, {useReducer} from 'react'\nimport axios from 'axios'\nimport GitHubContext from './githubContext'\nimport GithubReducer from './githubReducer'\n\nimport {\n    SEARCH_USERS,\n    SET_LOADING,\n    CLEAR_USERS,\n    GET_USER,\n    GET_REPOS\n} from '../types'\n\nconst GithubState = props =>{\n    const initialState = {\n        users: [],\n        users:{},\n        repos: [],\n        loading :false\n    }\n    const [state, dispatch] = useReducer(GithubReducer, initialState)\n\n    // Search Users\n    const searchUsers = async (text) => {\n        setLoading()\n        console.log(text)\n        const res = await axios.get(`https://api.github.com/search/users?q=${text}&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`)\n        console.log(res.data)\n        dispatch({\n            type: SEARCH_USERS,\n            payload: res.data.items\n        })\n        setLoading(false)\n      }\n\n    // Get Users\n\n    // Get Repos\n\n    // Set Loading\n      const setLoading = () => dispatch({type: SET_LOADING})\n    return <GitHubContext.Provider  \n        value={{\n            users: state.users,\n            user: state.user,\n            repos: state.repos,\n            loading: state.loading,\n            searchUsers\n\n        }}\n       >\n           {props.children}\n       </GitHubContext.Provider> \n}\nexport default GithubState;","import React, { useState, useEffect, Fragment } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport Navbar from './components/layout/Navbar'\nimport Users from './components/users/Users'\nimport User from './components/users/User'\n\nimport axios from 'axios'\nimport Search from './components/users/Search'\nimport Alert from './components/layout/Alert'\nimport About from './components/pages/About'\nimport notFound from './components/pages/notFound'\n\n\nimport GithubState from './context/github/GithubState'\nimport './App.css';\n\nconst App = () => {\n  let githubClientId;\n  let githubClientSecret;\n\n  if(process.env.NODE_ENV !== 'production'){\n    githubClientId = process.env.REACT_APP_GITHUB_CLIENT_ID\n    githubClientSecret = process.env.REACT_APP_GITHUB_CLIENT_SECRET\n  }else{\n    githubClientId = process.env.GITHUB_CLIENT_ID\n    githubClientSecret = process.env.GITHUB_CLIENT_SECRET\n\n  }\n\n  const [users, setUsers] = useState([]);\n  const [user, setUser] = useState({});\n  const [repos, setRepos] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [alert, setAlert] = useState(null);\n\n\n\n  useEffect(async () => {\n    //  function fetchData(){\n    console.log(process.env.REACT_APP_GITHUB_CLIENT_SECRET, process.env.REACT_APP_GITHUB_CLIENT_ID)\n    setLoading(true)\n    const res = await axios.get(`https://api.github.com/users?client_id=${githubClientId}&client_secret=${githubClientSecret}`)\n    console.log(res.data)\n    setUsers(res.data)\n    setLoading(false)\n    // }\n    // fetchData();\n  }, [])\n\n\n\n\n  const clearUsers = () => {\n    setUsers([])\n    setLoading(false)\n  }\n  const showAlert = (msg, type) => {\n    setAlert({ msg, type })\n\n    setTimeout(() => {\n      setAlert(null)\n    }, 5000);\n  }\n  const searchUsers = async (text) => {\n    console.log(\"qwedqwd\", text)\n    setLoading(true)\n\n\n    const res = await axios.get(`https://api.github.com/search/users?q=${text}&client_id=${githubClientSecret}&client_secret=${githubClientSecret}`)\n    console.log(res.data.items)\n    setUsers(res.data.items)\n    setLoading(false)\n  }\n  const getUser = async (username) => {\n    console.log(\"qwedqwd\")\n    setLoading(true)\n\n    const res = await axios.get(`https://api.github.com/users/${username}?client_id=${githubClientId}&client_secret=${githubClientSecret}`)\n    console.log(res.data)\n    setUser(res.data)\n    setLoading(false)\n  }\n  const getUserRepos = async (username) => {\n    console.log(\"qwedqwd\")\n    setLoading(true)\n    const res = await axios.get(`https://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&client_id=${githubClientId}&client_secret=${githubClientSecret}`)\n    console.log(res.data)\n    setRepos(res.data)\n    setLoading(false)\n  }\n  return (\n    <GithubState>\n      <Router>\n        <div className=\"App\">\n          <Navbar title=\"Github-Finder\" icon='fab fa-github' />\n          <div className='container'>\n            <Alert alert={alert} />\n            <Switch>\n              <Route exact path='/' render={props => (\n                <Fragment>\n                  <Search\n                    searchUsers={searchUsers}\n                    clearUsers={clearUsers}\n                    showClear={users.length > 0 ? true : false}\n                    setAlert={showAlert}\n                  />\n                  <Users loading={loading} users={users} />\n                </Fragment>\n              )} />\n              <Route exact path='/about' component={About} />\n              <Route exact path='/user/:login' render={props => (\n                <User\n                  {...props}\n                  getUser={getUser}\n                  getUserRepos={getUserRepos}\n                  user={user}\n                  repos={repos}\n                  loading={loading} />\n              )}\n              />\n              <Route component={notFound}/>\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </GithubState>\n  );\n\n}\n\nexport default App; \n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}